<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
				         http://www.springframework.org/schema/aop
				         http://www.springframework.org/schema/aop/spring-aop.xsd
						 http://www.springframework.org/schema/tx
						 http://www.springframework.org/schema/tx/spring-tx.xsd
						 http://www.springframework.org/schema/context 
				         http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	xmlns:context="http://www.springframework.org/schema/context">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="defaultAutoCommit" value="true" />
		<!-- 45.55.4.64 -->
		<!-- 123.57.158.124 -->
		<property name="url" value="jdbc:mysql://123.57.158.124:3306/meetu" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="minIdle" value="5" />
		<property name="maxWait" value="30" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		scope="singleton">
		<property name="dataSource" ref="dataSource" />
		<!-- Hibernate XML -->
		<property name="mappingResources">
			<list>
				<value>org/meetu/model/User.hbm.xml</value>
				<value>org/meetu/model/LocationCurr.hbm.xml</value>
				<value>org/meetu/model/LocationHis.hbm.xml</value>
				<value>org/meetu/model/FriendReq.hbm.xml</value>
				<value>org/meetu/model/Feedback.hbm.xml</value>
			</list>
		</property>
		<!-- Hibernate Annotation -->
		<property name="packagesToScan">
            <list>
                <!-- 可以加多个包 -->
                <value>org.meetu.model</value>
            </list>
        </property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLInnoDBDialect
				</prop>
				<prop key="hibernate.show_sql">
					true
				</prop>
				<prop key="current_session_context_class">
					thread
				</prop>
				<prop key="hibernate.hbm2ddl.auto">
					update
				</prop>
				<prop key="hibernate.format_sql">
					false
				</prop>
				<prop key="hibernate.use_sql_comments">
					true
				</prop>
			</props>
		</property>
	</bean>

	<!-- 自动扫描注解类所在的包 -->
	<context:component-scan base-package="org.meetu" />


	<!-- tx -->
	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

    <!-- 配置那些类的方法进行事务管理,需要aopalliance-1.0.jar和aspectjweaver.jar，当前org.meetu.service.impl包中的子包，  
                       类中所有方法需要，还需要参考tx:advice的设置 -->  
    <!-- 需要引入tx的命名空间 -->  
    <!-- 这是事务通知操作，使用的事务管理器引用自 transactionManager -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
         <!-- 指定哪些方法需要加入事务，这里懒惰一下全部加入，可以使用通配符来只加入需要的方法 -->
         	<!-- -->    
         	<tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />    
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            
            <tx:method name="upload*" propagation="REQUIRED" />
            <tx:method name="meetu*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>   
    <!-- 需要引入aop的命名空间 -->  
    <aop:config>  
        <!-- 切入点指明了在执行Service的所有方法时产生事务拦截操作 -->  
        <!-- 
        	第一个空格前是说明ret-type-pattern，空格后是说明name-pattern(param-pattern)，具体说明如下：
			第一个*（ret-type-pattern）, 表示任意返回值类型
			第二个和第三个*(name-pattern), 第二个包名通配，第三个方法名通配
			最后二个.. 表示通配方法可以有0个或多个参数
         -->
         <!-- Service层实物控制 -->
        <aop:pointcut id="serviceMethods" expression="execution(* org.meetu.service.impl.*.*(..))" />
        <!-- 定义了将采用何种拦截操作，这里引用到 txAdvice -->  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
    </aop:config>  

</beans>