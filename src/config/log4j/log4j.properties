
#日志级别包括：INFO, WARN, ERROR, FATAL
#默认输出到R记录器  (正式环境需去掉Console，以免输出到catalina.out!)

LOG4J_LOGFILE_HOME                                    = ${catalina.base}/logs
LOG4J_LOGFILE_TIMEPATTERN                             = %d{yyyyMMdd HH\:mm\:ss\:SSS}[%-5p][%t]%m [%F\:%L]%n 
LOG4J_LOGFILE_ENCODING                                = UTF-8
LOG4J_LOGFILE_MAXBACKUPINDEX                          = 50
LOG4J_LOGFILE_SIZE                                    = 15728640


#log4j.rootLogger                                      = INFO, R, Console
log4j.rootLogger                                      = INFO, R,Console


#Console 控制台
log4j.appender.Console                                = org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout                         = org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern       = %d{yyyyMMdd HH\:mm\:ss\:SSS}[%-5p][%t]%m [%F\:%L]%n 

#R 默认记录器，按天分割文件最多保留n天
log4j.appender.R                                      = org.meetu.util.DayRollingFileAppender
log4j.appender.R.encoding                             = ${LOG4J_LOGFILE_ENCODING}
log4j.appender.R.File                                 = ${LOG4J_LOGFILE_HOME}/meetu.log
log4j.appender.R.maxBackupIndex                       = ${LOG4J_LOGFILE_MAXBACKUPINDEX}
log4j.appender.R.MaximumFileSize                      = ${LOG4J_LOGFILE_SIZE}
log4j.appender.R.layout                               = org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern             = ${LOG4J_LOGFILE_TIMEPATTERN}



### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###


log4j.logger.com.opensymphony.xwork2=debug

log4j.logger.org.hibernate=debug
log4j.appender.STDOUT.Threshold=debug  
log4j.category.org.hibernate.SQL=debug  
log4j.category.org.hibernate.type=debug  
### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
#log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug

### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
log4j.logger.org.hibernate.hql=info

### log cache activity ###
log4j.logger.org.hibernate.cache=info

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
